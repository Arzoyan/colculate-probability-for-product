{"version":3,"sources":["redux/actionTypes.js","components/addProduct/constants.js","components/addProduct/useAddProduct.js","redux/actions.js","components/addProduct/addProduct.jsx","components/getProductList/utils.js","redux/selectors.js","components/getProductList/useGetProductList.js","components/getProductList/getProductList.jsx","App.js","redux/rootReducer.js","redux/storeConfig.js","index.js","components/addProduct/addProduct.module.css","components/getProductList/getProductList.module.css"],"names":["ADD_PRODUCT","itemValues","label","type","initialValues","id","Date","now","name","price","weight","validationSchema","Yup","of","shape","required","typeError","useAddItems","dispatch","useDispatch","handleReset","resetForm","handleSave","payload","values","useFormik","validateOnBlur","onSubmit","errors","touched","handleSubmit","handleChange","setValues","handleAddNewItem","handleChangeField","value","index","handleRemoveItem","filter","item","AddProduct","useAddProduct","fieldList","useMemo","className","styles","itemCont","Paper","elevation","paper","map","itemValue","card","TextField","input","fullWidth","error","helperText","onChange","e","target","variant","InputLabelProps","shrink","placeholder","Button","onClick","color","disabled","btnCont","getProbability","allWeight","toFixed","getList","store","list","getAllWeight","useGetItems","useSelector","useState","selectedItems","setSelectedItems","handleRefresh","useCallback","maxIndex","randomItems","listLength","length","randomIndex","hasOwnProperty","probability","Object","getRandomItemsWithProbability","useEffect","allItemsCount","GetItemList","useGetProductList","container","cardsContainer","cardCont","Card","CardContent","Typography","component","refreshBtn","App","initialState","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","state","reduce","total","currentValue","Number","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b8a9088d.chunk.js","sourcesContent":["export const ADD_PRODUCT = \"ADD_PRODUCT\";","import * as Yup from \"yup\";\r\n\r\nexport const itemValues = [\r\n  { label: \"name\", type: \"string\" },\r\n  { label: \"price\", type: \"number\" },\r\n  { label: \"weight\", type: \"number\" },\r\n  { label: \"start date\", type: \"date\" },\r\n  { label: \"end date\", type: \"date\" }\r\n];\r\n\r\nexport const initialValues = {\r\n  id: Date.now(),\r\n  name: \"\",\r\n  price: \"\",\r\n  weight: \"\",\r\n  \"start date\": \"\",\r\n  \"end date\": \"\"\r\n};\r\n\r\nexport const validationSchema = Yup.array().of(\r\n  Yup.object().shape({\r\n    name: Yup.string().required(\"name is required\"),\r\n    price: Yup.number()\r\n      .typeError(\"must be number\")\r\n      .required(\"price is required\"),\r\n    weight: Yup.number()\r\n      .typeError(\"must be number\")\r\n      .required(\"weight is required\"),\r\n    \"start date\": Yup.date().typeError(\"must be vaild date\"),\r\n    \"end date\": Yup.date().typeError(\"must be vaild date\"),\r\n  })\r\n);\r\n","import { useDispatch } from \"react-redux\";\r\nimport { addItem } from \"../../redux/actions\";\r\nimport { useFormik } from \"formik\";\r\nimport { initialValues, validationSchema } from \"./constants\";\r\n\r\nexport default function useAddItems() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleReset = () => {\r\n    resetForm();\r\n  };\r\n  const handleSave = () => {\r\n    dispatch(addItem(values));\r\n    handleReset();\r\n  };\r\n\r\n  let {\r\n    errors,\r\n    touched,\r\n    values,\r\n    handleSubmit,\r\n    handleChange,\r\n    resetForm,\r\n    setValues,\r\n  } = useFormik({\r\n    initialValues: [initialValues],\r\n    validationSchema: validationSchema,\r\n    validateOnBlur: false,\r\n    onSubmit: () => {\r\n      handleSave();\r\n    },\r\n  });\r\n\r\n  const handleAddNewItem = () => {\r\n    setValues([...values, { ...initialValues, id: Date.now() }]);\r\n  };\r\n\r\n  const handleChangeField = (value, index) => {\r\n    values[index] = { ...values[index], ...value };\r\n    setValues([...values]);\r\n  };\r\n\r\n  const handleRemoveItem = (id) => {\r\n    values = values.filter((item) => item.id !== id);\r\n    setValues(values);\r\n  };\r\n\r\n  return {\r\n    errors,\r\n    touched,\r\n    values,\r\n    handleSubmit,\r\n    handleChange,\r\n    handleReset,\r\n    handleAddNewItem,\r\n    handleChangeField,\r\n    handleRemoveItem\r\n  };\r\n}\r\n","import {\r\n    ADD_PRODUCT,\r\n  } from './actionTypes';\r\n\r\nexport const addItem = (payload) => ({\r\n    type: ADD_PRODUCT,\r\n    payload,\r\n})\r\n","import React, { useMemo } from \"react\";\r\nimport { TextField, Button, Paper } from \"@material-ui/core/\";\r\n\r\nimport styles from \"./addProduct.module.css\";\r\nimport useAddProduct from \"./useAddProduct\";\r\nimport { itemValues } from \"./constants\";\r\n\r\nexport default function AddProduct() {\r\n  const {\r\n    errors,\r\n    values,\r\n    handleSubmit,\r\n    handleReset,\r\n    handleAddNewItem,\r\n    handleChangeField,\r\n    handleRemoveItem,\r\n    touched,\r\n  } = useAddProduct();\r\n\r\n  const fieldList = useMemo(() => values, [values]);\r\n\r\n  return (\r\n    <div className={styles.itemCont}>\r\n      <Paper elevation={3} className={styles.paper}>\r\n        <>\r\n          {fieldList.map((itemValue, index) => {\r\n            return (\r\n              <div className={styles.card} key={index}>\r\n                {itemValues.map((item) => (\r\n                  <TextField\r\n                    className={styles.input}\r\n                    fullWidth\r\n                    key={item.label}\r\n                    name={item.label}\r\n                    type={item.type}\r\n                    value={itemValue[item.label]}\r\n                    error={\r\n                      touched[index] &&\r\n                      errors[index] &&\r\n                      !!errors[index][item.label]\r\n                    }\r\n                    helperText={\r\n                      touched[index] &&\r\n                      errors[index] &&\r\n                      errors[index][item.label]\r\n                    }\r\n                    onChange={(e) =>\r\n                      handleChangeField(\r\n                        {\r\n                          [item.label]: e.target.value,\r\n                        },\r\n                        index\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    label={item.label}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    placeholder={item.placeholder || \"\"}\r\n                  />\r\n                ))}\r\n                <Button\r\n                  fullWidth\r\n                  onClick={() => {\r\n                    handleRemoveItem(itemValue.id);\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  disabled={!index}\r\n                >\r\n                  Remove item\r\n                </Button>\r\n              </div>\r\n            );\r\n          })}\r\n        </>\r\n\r\n        <div className={styles.btnCont}>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleAddNewItem}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n          Add Item\r\n          </Button>\r\n        </div>\r\n        <div className={styles.btnCont}>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleReset}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleSubmit}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","\r\n\r\nexport const getProbability = (weight, allWeight) => {\r\n    return (weight / allWeight * 100).toFixed(2) + \"%\";\r\n}\r\n\r\nconst getRandomNumber = (maxIndex) => {\r\n    return Date.now() % maxIndex\r\n}\r\n\r\nexport const getRandomItemsWithProbability = (list, allWeight) => {\r\n    const randomItems = {};\r\n    const listLength = list.length;\r\n    do {\r\n        const randomIndex = getRandomNumber(listLength)\r\n        if (randomItems.hasOwnProperty(randomIndex)) continue;\r\n        randomItems[randomIndex] = {\r\n                ...list[randomIndex],\r\n                probability: getProbability(list[randomIndex].weight, allWeight)\r\n            }\r\n    } while (Object.values(randomItems).length !== 5)\r\n    return Object.values(randomItems);\r\n}","export const getList = store => store.list;\r\nexport const getAllWeight = store => store.allWeight;\r\n","\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { getRandomItemsWithProbability } from './utils';\r\nimport { useSelector } from 'react-redux'\r\nimport { getAllWeight, getList } from '../../redux/selectors';\r\n\r\nexport default function useGetItems() {\r\n    const list = useSelector(getList)\r\n    const allWeight = useSelector(getAllWeight)\r\n    const [selectedItems, setSelectedItems] = useState([])\r\n\r\n    const handleRefresh = useCallback(() => {\r\n        setSelectedItems(getRandomItemsWithProbability(list, allWeight))\r\n    }, [list, allWeight])\r\n\r\n    useEffect(() => {\r\n        list.length > 4 && handleRefresh(list)\r\n    }, [list, handleRefresh])\r\n\r\n    return {\r\n        selectedItems,\r\n        allItemsCount: list.length,\r\n        handleRefresh,\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n} from \"@material-ui/core/\";\r\nimport styles from \"./getProductList.module.css\";\r\nimport useGetProductList from \"./useGetProductList\";\r\n\r\nexport default function GetItemList() {\r\n  const { selectedItems, allItemsCount, handleRefresh } = useGetProductList();\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Paper elevation={3}>\r\n        {allItemsCount >= 5 ? (\r\n          <>\r\n            <div className={styles.cardsContainer}>\r\n              {selectedItems.map((item,index) => (\r\n                <div key={`${Date.now()}__${index}`} className={styles.cardCont}>\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Typography variant=\"h5\" component=\"h2\">\r\n                        {item.name}\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\">\r\n                        price: {item.price}\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\">\r\n                        weight: {item.weight}\r\n                      </Typography>\r\n                      <Typography color=\"primary\" component=\"p\">\r\n                        probability: {item.probability}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <Button\r\n              className={styles.refreshBtn}\r\n              fullWidth\r\n              onClick={handleRefresh}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              disabled={allItemsCount < 6}\r\n            >\r\n              Refresh\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <h2>\r\n            {`must be at last ${5 - allItemsCount} items to show probabilities`}\r\n          </h2>\r\n        )}\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import AddProduct from './components/addProduct';\nimport GetProductList from './components/getProductList'\nimport './App.css';\n\n\nfunction App() {\nreturn (\n    <div className=\"App\">\n      <AddProduct />\n      <GetProductList />\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_PRODUCT } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  allWeight: 0,\r\n};\r\n\r\nexport default function reducer(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case ADD_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        list: [...state.list, ...payload],\r\n        allWeight: payload.reduce((total, currentValue) => {\r\n            return total + Number(currentValue.weight);\r\n          }, state.allWeight)\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { compose, createStore } from 'redux';\r\nimport rootReducer from './rootReducer';\r\n\r\n  const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const enhancer = composeEnhancer();\r\n\r\n  const store = createStore(rootReducer, enhancer);\r\n\r\n  export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/storeConfig'\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemCont\":\"addProduct_itemCont__3k2YV\",\"btnCont\":\"addProduct_btnCont__1_Lof\",\"paper\":\"addProduct_paper__1si0B\",\"input\":\"addProduct_input__1qQOW\",\"card\":\"addProduct_card__3F5ZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"getProductList_container__3z5Qi\",\"cardsContainer\":\"getProductList_cardsContainer__3GnAn\",\"cardCont\":\"getProductList_cardCont__2uvsT\"};"],"sourceRoot":""}